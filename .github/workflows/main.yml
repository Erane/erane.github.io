name: 口令生成与部署

on:
  # 定时触发，每天UTC 0点运行
  schedule:
    - cron: '0 0 * * *'
  # 也可以手动触发
  workflow_dispatch:

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 检出phone分支
        uses: actions/checkout@v4
        with:
          ref: phone
          token: ${{ secrets.ACCESS_TOKEN }}
      
      - name: 生成随机口令
        id: generate_password
        run: |
          # 生成一个20位的随机字符串作为口令
          PASSWORD=$(openssl rand -hex 10)
          echo "password=$PASSWORD" >> $GITHUB_ENV
          echo "生成的口令: $PASSWORD"
      
      - name: 更新或创建password.js文件
        run: |
          # 直接在仓库根目录创建或更新password.js
          echo "const PASSWORD = '${{ env.password }}';" > password.js
          cat password.js
      
      - name: 提交更改
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add password.js
          git commit -m "自动更新口令 - $(date +'%Y-%m-%d %H:%M:%S')" || echo "没有更改需要提交"
          git push origin phone || echo "推送失败，可能没有更改"
      
      - name: 通知到个人微信
        env:
          SERVERCHAN_KEY: ${{ secrets.SERVERCHAN_KEY }}
        run: |
          # 使用 Server酱发送微信通知
          echo "准备发送微信通知..."
          
          # URL编码处理口令（处理特殊字符）
          ENCODED_PASSWORD=$(echo "${{ env.password }}" | python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.stdin.read().strip()))")
          
          # 构建API请求URL
          API_URL="https://sctapi.ftqq.com/${SERVERCHAN_KEY}.send?title=今日口令&desp=${ENCODED_PASSWORD}"
          
          # 发送GET请求并捕获响应
          RESPONSE=$(curl -s "$API_URL")
          
          # 检查响应状态
          if echo "$RESPONSE" | grep -q '"code":0'; then
            echo "微信通知发送成功"
          else
            echo "微信通知发送失败: $RESPONSE"
            exit 1
          fi 
